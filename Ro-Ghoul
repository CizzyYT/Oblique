local VirtualInputManager = game:GetService("VirtualInputManager")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local HttpService = game:GetService("HttpService")

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Oblique | Ro-Ghoul",
    SubTitle = "",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "Mob Farm", Icon = "sword" }),
    Boss = Window:AddTab({ Title = "Boss Farm", Icon = "person-standing" }), 
    Skills = Window:AddTab({ Title = "Skills", Icon = "bar-chart" }),
    Esp = Window:AddTab({ Title = "Esp", Icon = "eye" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

local selectedmob = nil  -- Default value

local function getNPC(npcName)
    local dist, thing = math.huge
    for i,v in pairs(game:GetService("Workspace").NPCSpawns:GetDescendants()) do
        if v.Name == npcName then
            local mag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude
            if mag < dist then 
                dist = mag 
                thing = v 
            end
        end
    end
    return thing
end

local noclipE = false
local antifall = false

local function noclip()
    for i, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if v:IsA("BasePart") and v.CanCollide == true then
            v.CanCollide = false
            game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
        end
    end
end

local function moveto(obj, speed)
    local behindPosition = obj.Position - obj.CFrame.LookVector * 3 -- Move 3 units behind the NPC
    local lookDirection = obj.CFrame.LookVector
    local targetCFrame = CFrame.new(behindPosition, behindPosition + lookDirection)
    local info = TweenInfo.new((game.Players.LocalPlayer.Character.HumanoidRootPart.Position - behindPosition).Magnitude / speed, Enum.EasingStyle.Linear)
    local tween = TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart, info, {CFrame = targetCFrame})

    if not game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
        antifall = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character.HumanoidRootPart)
        antifall.Velocity = Vector3.new(0,0,0)
        noclipE = game:GetService("RunService").Stepped:Connect(noclip)
        tween:Play()
    end
        
    tween.Completed:Connect(function()
        antifall:Destroy()
        noclipE:Disconnect()
    end)
end

getgenv().farmmobs = false
local function toggleFarm(enabled)
    getgenv().farmmobs = enabled
    while farmmobs do task.wait()
        if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") and game.Players.LocalPlayer.Character.Humanoid.Health > 0 then
            pcall(function()
                moveto(getNPC(selectedmob).HumanoidRootPart, 100)
                game:GetService("VirtualUser"):ClickButton1(Vector2.new(9e9, 9e9))
            end)
        else
            repeat wait(1) until game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") and game.Players.LocalPlayer.Character.Humanoid.Health > 0
        end
    end
end

local MobDropdown = Tabs.Main:AddDropdown("MobDropdown", {
    Title = "Select Mob",
    Values = {"Human","Athlete", "Rank 1 Investigator", "Rank 2 Investigator", "First Class Investigator", "Low Rank Aogiri Member", "Mid Rank Aogiri Member", "High Rank Aogiri Member"},
    Multi = false,
    Default = 1,
})

MobDropdown:SetValue(selectedmob)

MobDropdown:OnChanged(function(Value)
    selectedmob = Value
end)

local MobToggle = Tabs.Main:AddToggle("MobToggle", {Title = "Toggle Farm", Default = false })

MobToggle:OnChanged(function(enabled)
    toggleFarm(enabled)
end)

local AutoAttack = Tabs.Main:AddToggle("AutoAttack", {Title = "Auto Attack", Default = false })

AutoAttack:OnChanged(function(Value)
    getgenv().autoAttackActive = Value
    coroutine.resume(coroutine.create(function()
        while getgenv().autoAttackActive do
            if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") and game.Players.LocalPlayer.Character.Humanoid.Health > 0 then
                local argsDown = {
                    [1] = "\230\147\141\228\189\160\240\159\146\166\240\159\146\148\240\159\141\145\240\159\145\140\240\159\146" ..
                        "\166\230\147\141\228\189\160\240\159\146\166\240\159\146\148\240\159\141\145\240\159\145" ..
                        "\140\240\159\146\166\240\159\146\148\240\159\141\145\240\159\145\140\240\159\146\166" ..
                        "\240\159\146\148\240\159\141\145\240\159\145\140\240\159\146\148\240\159\141\145\240\159" ..
                        "\145\140\240\159\146\166\240\159\146\148\240\159\141\145\240\159\145\140",
                    [2] = "Mouse1",
                    [3] = "Down",
                    [4] = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position),
                    [6] = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(0, 22, -83)),
                    [7] = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
                }
                local argsUp = {
                    [1] = "\230\147\141\228\189\160\240\159\146\166\240\159\146\148\240\159\141\145\240\159\145\140\240\159\146" ..
                        "\166\230\147\141\228\189\160\240\159\146\166\240\159\146\148\240\159\141\145\240\159\145" ..
                        "\140\240\159\146\166\240\159\146\148\240\159\141\145\240\159\145\140\240\159\146\166" ..
                        "\240\159\146\148\240\159\141\145\240\159\145\140\240\159\146\148\240\159\141\145\240\159" ..
                        "\145\140\240\159\146\166\240\159\146\148\240\159\141\145\240\159\145\140",
                    [2] = "Mouse1",
                    [3] = "Up",
                    [4] = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position),
                    [6] = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(0, 22, -83)),
                    [7] = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
                }
                
                game:GetService("Players").LocalPlayer.Character.Remotes.KeyEvent:FireServer(unpack(argsDown))
                wait(0.1)  -- Short wait before releasing the button
                game:GetService("Players").LocalPlayer.Character.Remotes.KeyEvent:FireServer(unpack(argsUp))
                wait()  -- Adding a wait time to prevent server overload
            else
                repeat wait() until game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") and game.Players.LocalPlayer.Character.Humanoid.Health > 0
            end
            if not getgenv().autoAttackActive then
                break
            end
        end
    end))
end)

AutoAttack:SetValue(false)

local function createSkillToggle(skillKey)
    local toggle = Tabs.Skills:AddToggle("AutoSkill" .. skillKey, {Title = "Auto Skill " .. skillKey, Default = false })
    toggle:OnChanged(function(value)
        getgenv()["autoSkill" .. skillKey .. "Active"] = value
        if value then
            coroutine.resume(coroutine.create(function()
                while getgenv()["autoSkill" .. skillKey .. "Active"] do
                    local args = {
                        [1] = "\230\147\141\228\189\160\240\159\146\166\240\159\146\148\240\159\141\145\240\159\145\140\240\159\146" ..
                            "\166\230\147\141\228\189\160\240\159\146\166\240\159\146\148\240\159\141\145\240\159\145" ..
                            "\140\240\159\146\166\240\159\146\148\240\159\141\145\240\159\145\140\240\159\146\166" ..
                            "\240\159\146\148\240\159\141\145\240\159\145\140\240\159\146\148\240\159\141\145\240\159" ..
                            "\145\140\240\159\146\166\240\159\146\148\240\159\141\145\240\159\145\140",
                        [2] = skillKey,
                        [3] = "Down",
                        [4] = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position),
                        [6] = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(0, 22, -83)),
                        [7] = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
                    }
                    game:GetService("Players").LocalPlayer.Character.Remotes.KeyEvent:FireServer(unpack(args))
                    wait(1)  -- Adding a wait time to prevent server overload
                    args[3] = "Up"
                    game:GetService("Players").LocalPlayer.Character.Remotes.KeyEvent:FireServer(unpack(args))
                    wait(1)  -- Adding a wait time to prevent server overload
                end
            end))
        end
    end)
end

createSkillToggle("E")
createSkillToggle("R")


local toggleAction = Tabs.Main:AddToggle("ToggleActionOne", {Title = "Auto Equip Kagune or Quinque", Default = false})
toggleAction:OnChanged(function(value)
    if value then
        local player = game.Players.LocalPlayer
        local function checkAndFire()
            local character = player.Character
            if character then
                while not (character:FindFirstChild("Kagune") or character:FindFirstChild("Quinque")) do
                    local args = {
                        [1] = "\230\147\141\228\189\160\240\159\146\166\240\159\146\148\240\159\141\145\240\159\145\140\240\159\146" ..
                            "\166\230\147\141\228\189\160\240\159\146\166\240\159\146\148\240\159\141\145\240\159\145" ..
                            "\140\240\159\146\166\240\159\146\148\240\159\141\145\240\159\145\140\240\159\146\166" ..
                            "\240\159\146\148\240\159\141\145\240\159\145\140\240\159\146\148\240\159\141\145\240\159" ..
                            "\145\140\240\159\146\166\240\159\146\148\240\159\141\145\240\159\145\140",
                        [2] = "One",
                        [3] = "Down",
                        [4] = CFrame.new(character.HumanoidRootPart.Position),
                        [6] = CFrame.new(character.HumanoidRootPart.Position + Vector3.new(0, 22, -83)),
                        [7] = character.HumanoidRootPart.Position
                    }
                    game:GetService("Players").LocalPlayer.Character.Remotes.KeyEvent:FireServer(unpack(args))
                    wait(1)  -- Adding a wait time to prevent server overload and allow time for the model to be added
                end
            end
        end

        checkAndFire()  -- Initial check and fire

        player.CharacterAdded:Connect(function()
            wait(1)  -- Wait for character to fully load
            checkAndFire()  -- Check and fire again when the player respawns
        end)
    else
        local player = game.Players.LocalPlayer
        local character = player.Character
        if character then
            local args = {
                [1] = "\230\147\141\228\189\160\240\159\146\166\240\159\146\148\240\159\141\145\240\159\145\140\240\159\146" ..
                    "\166\230\147\141\228\189\160\240\159\146\166\240\159\146\148\240\159\141\145\240\159\145" ..
                    "\140\240\159\146\166\240\159\146\148\240\159\141\145\240\159\145\140\240\159\146\166" ..
                    "\240\159\146\148\240\159\141\145\240\159\145\140\240\159\146\148\240\159\141\145\240\159" ..
                    "\145\140\240\159\146\166\240\159\146\148\240\159\141\145\240\159\145\140",
                [2] = "One",
                [3] = "Up",
                [4] = CFrame.new(character.HumanoidRootPart.Position),
                [6] = CFrame.new(character.HumanoidRootPart.Position + Vector3.new(0, 22, -83)),
                [7] = character.HumanoidRootPart.Position
            }
            game:GetService("Players").LocalPlayer.Character.Remotes.KeyEvent:FireServer(unpack(args))
        end
    end
end)

Tabs.Boss:AddParagraph({
    Title = "IMPORTANT",
    Content = "Just use the Auto Attack from Mob Farm."
})

local BossDropdown = Tabs.Boss:AddDropdown("MobDropdown", {
    Title = "Select Boss",
    Values = {"Nishiki Nishio", "Touka Kirishima", "Koutarou Amon", "Eto Yoshimura" },
    Multi = false,
    Default = 1,
})

BossDropdown:SetValue(selectedmob)

BossDropdown:OnChanged(function(Value)
    selectedmob = Value
end)

local BossToggle = Tabs.Boss:AddToggle("BossToggle", {Title = "Toggle Boss Farm", Default = false })

BossToggle:OnChanged(function(enabled)
    toggleFarm(enabled)
end)

local Colorpicker = Tabs.Esp:AddColorpicker("Colorpicker", {
    Title = "Choose Box and Tracer Colour",
    Default = Color3.fromRGB(96, 205, 255)
})

local PlayerEsp = Tabs.Esp:AddToggle("PlayerEsp", {Title = "Box Esp", Default = false })
local espBoxes = {}

PlayerEsp:OnChanged(function(enabled)
    if not enabled then
        for _, box in pairs(espBoxes) do
            box:Remove()
        end
        espBoxes = {}
    else
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            if player ~= game.Players.LocalPlayer then
                local box = Drawing.new("Square")
                box.Visible = false
                box.Color = Colorpicker.Value  -- Use the color from the color picker
                box.Thickness = 2
                box.Transparency = 1
                box.Filled = false
                espBoxes[player.Name] = box

                local function update()
                    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                        local vector, onScreen = workspace.CurrentCamera:WorldToViewportPoint(player.Character.HumanoidRootPart.Position)
                        if onScreen then
                            box.Size = Vector2.new(2000 / vector.Z, 4000 / vector.Z)
                            box.Position = Vector2.new(vector.X - box.Size.X / 2, vector.Y - box.Size.Y / 2)
                            box.Visible = true
                        else
                            box.Visible = false
                        end
                    else
                        box.Visible = false
                    end
                end

                game:GetService("RunService").RenderStepped:Connect(update)
            end
        end
    end
end)

local TracerEsp = Tabs.Esp:AddToggle("TracerEsp", {Title = "Tracer Esp", Default = false})

local tracers = {}

TracerEsp:OnChanged(function(enabled)
    if enabled then
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            if player ~= game.Players.LocalPlayer then
                local tracer = Drawing.new("Line")
                tracer.From = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y)
                tracer.To = Vector2.new()
                tracer.Color = Colorpicker.Value  -- Use the color from the color picker
                tracer.Thickness = 2
                tracer.Visible = false
                tracers[player.Name] = tracer

                local function update()
                    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                        local vector, onScreen = workspace.CurrentCamera:WorldToViewportPoint(player.Character.HumanoidRootPart.Position)
                        if onScreen then
                            tracer.To = Vector2.new(vector.X, vector.Y)
                            tracer.Visible = true
                        else
                            tracer.Visible = false
                        end
                    else
                        tracer.Visible = false
                    end
                end

                game:GetService("RunService").RenderStepped:Connect(update)
            end
        end
    else
        for _, tracer in pairs(tracers) do
            tracer:Remove()
        end
        tracers = {}
    end
end)

Colorpicker:OnChanged(function()
    for _, box in pairs(espBoxes) do
        box.Color = Colorpicker.Value  -- Update the color of all existing boxes when the color picker changes
    end
    for _, tracer in pairs(tracers) do
        tracer.Color = Colorpicker.Value  -- Update the color of all existing tracers when the color picker changes
    end
end)

Colorpicker:SetValueRGB(Color3.fromRGB(255, 255, 255))

local NameEsp = Tabs.Esp:AddToggle("NameEsp", {Title = "Name Tag ESP", Default = false})

NameEsp:OnChanged(function(enabled)
    if enabled then
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            if player ~= game.Players.LocalPlayer then
                local billboardGui = Instance.new("BillboardGui", player.Character)
                billboardGui.Adornee = player.Character:FindFirstChild("Head")
                billboardGui.Size = UDim2.new(0, 50, 0, 20)  -- Smaller size
                billboardGui.StudsOffset = Vector3.new(0, 3, 0)  -- Position above the head
                billboardGui.AlwaysOnTop = true

                local textLabel = Instance.new("TextLabel", billboardGui)
                textLabel.BackgroundTransparency = 1
                textLabel.Size = UDim2.new(1, 0, 1, 0)
                textLabel.Text = player.Name
                textLabel.TextColor3 = Color3.new(1, 1, 1)
                textLabel.TextScaled = true

                player.CharacterAdded:Connect(function(character)
                    billboardGui.Adornee = character:FindFirstChild("Head")
                    billboardGui.StudsOffset = Vector3.new(0, 3, 0)  -- Ensure it remains above the head
                end)
            end
        end
    else
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            if player ~= game.Players.LocalPlayer then
                if player.Character and player.Character:FindFirstChildOfClass("BillboardGui") then
                    player.Character:FindFirstChildOfClass("BillboardGui"):Destroy()
                end
            end
        end
    end
end)



-- Addons:
-- SaveManager (Allows you to have a configuration system)
-- InterfaceManager (Allows you to have a interface managment system)

-- Hand the library over to our managers
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

-- Ignore keys that are used by ThemeManager.
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings()

-- You can add indexes of elements the save manager should ignore
SaveManager:SetIgnoreIndexes({})

-- use case for doing it this way:
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)


Window:SelectTab(1)

-- You can use the SaveManager:LoadAutoloadConfig() to load a config
-- which has been marked to be one that auto loads!
SaveManager:LoadAutoloadConfig()
